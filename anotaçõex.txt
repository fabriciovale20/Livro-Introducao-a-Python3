→ Estrutura do FOR:
    for "contador" in range("início", "fim", "saltos"):
Exemplo:
    for c in range(1, 10, 2):
        print(c)

Irá mostrar: 1, 3, 5, 7 e 9.
----------------------------------------------------------------------------------------------------------------------------------------------------
→ Comando "break" também interrompe o laço FOR.
----------------------------------------------------------------------------------------------------------------------------------------------------
→ Também pode utilizar o ELSE no FOR:
L = [7, 9, 10, 12]
p = int(input('Digite um número a pesquisar: '))

for e in L:
    if e == p:
        print('Elemento encontrado!')
        break
else:
    print('Elemento não encontrado.')

    Nesse caso, se o FOR percorrer toda lista sem ser interrompido, ele executará o ELSE no final.
    OBS.: O mesmo serve para o WHILE, também pode-se aplicar o ELSE no WHILE.
----------------------------------------------------------------------------------------------------------------------------------------------------
→ Criar uma cópia de uma lista, exemplo: 
    lista = []
    lista_2 = lista[:]
----------------------------------------------------------------------------------------------------------------------------------------------------
→ Adicionar elementos numa lista:
    L = L + [1] é a mesma coisa que L.append(1)
----------------------------------------------------------------------------------------------------------------------------------------------------
→ Adicionar uma lista na outra usando EXTEND:
    L = ['a', 'b']
    L.extend(['c'])
    L = ['a', 'b', 'c']

    L = ['a', 'b', 'c']
    L.extend(['d', 'e'])
    L = ['a', 'b', 'c', ['d', 'e']]
----------------------------------------------------------------------------------------------------------------------------------------------------
→ Usando listas como Fila, recebe o conceito: O último elemento a entrar é o último a sair.
Funciona como uma fila de banco, o primeiro a chegar é o primeiro a ser atendido.
----------------------------------------------------------------------------------------------------------------------------------------------------
→ Usando lista como Pilha, recebe o conceito: O último elemento a entrar é o primeiro a sair.
Funciona como uma pulha de pratos, o último prato a ser colocado na pilha dos pratos é o primeiro a ser lavado.
----------------------------------------------------------------------------------------------------------------------------------------------------
→ Gerar um lista com 10 elementos:
    lista = list(range(1, 11)) # Vai de 1 até 10
    lista = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
----------------------------------------------------------------------------------------------------------------------------------------------------
→ O parâmentro RANGE do FOR e da LISTA, funcionam da mesma forma.
Exemplo:
    Lista >>> L = list(range(100, 1100, 50)) # 100 é o início, 1100 o fim e 50 os saltos.
    For >>> for c in range(100, 1100, 50): # O RANGE fará os mesmos passos da Lista.
----------------------------------------------------------------------------------------------------------------------------------------------------
→ ENUMERATE puxa em ordem o índice e o valor, gerando uma tupla.
Exemplo:
L = [5, 9, 13]
for x, e in enumerate(L): # Onde "x" é o índice e "e" o valor.
    print(f'[{x}] {e}') # No primeiro resultado ele gera uma tupla (0, 5), em que x = 0 e e = 5. Então teremos "x, e = (0, 5)".

Resultado:
[0] 5
[1] 9
[2] 13
----------------------------------------------------------------------------------------------------------------------------------------------------
→ No DICIONÁRIO podemos mostrar apenas as Chaves (keys) ou Valores (values):
tabela = {
    'Alface': 0.45,
    'Batata': 1.20,
    'Tomate': 1,
    'Feijão': 1.50
}

print(tabela.keys()) # Irá imprimir apenas chaves
Resultado:
dict_keys(['Alface', 'Batata', 'Tomate', 'Feijão'])

print(tabela.values()) # Imprimi os valores
Resultado:
dict_values([0.45, 1.2, 1, 1.5])